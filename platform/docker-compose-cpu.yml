version: '3.9'

services:
  components-explorer:
    build:
      context: ./components-explorer
      dockerfile: Dockerfile
    ports:
      - "12345:80"
    volumes:
      - ./components-explorer:/app
    environment:
      - NODE_ENV=production
    networks:
      - platform_network
      - app_network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - platform_network
      - app_network

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_MESSAGE_MAX_BYTES: 200000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 200000000
    depends_on:
      - zookeeper
    networks:
      - platform_network
      - app_network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - platform_network
      - app_network
  ollama:
    image: ollama/ollama:0.5.1
    container_name: ollama-platform
    ports:
      - "11434:11434"
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface
      - ollama:/root/.ollama
    networks:
      - platform_network
      - app_network
    restart: unless-stopped
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: Spanda@123
      MYSQL_DATABASE: feedbackDb
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - platform_network
      - app_network
  verba:
    image: prabhas264/verba
    ports:
      - 8000:8000
    environment:
      - OLLAMA_URL=http://ollama:11434
      - OLLAMA_MODEL=$OLLAMA_MODEL
      - OLLAMA_EMBED_MODEL=$OLLAMA_EMBED_MODEL
      - WEAVIATE_URL_VERBA=http://weaviate:8180
    volumes:
      - ./data:/data/
    depends_on:
      weaviate:
        condition: service_healthy
    healthcheck:
      test: wget --no-verbose --tries=3 --spider http://localhost:8000 || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - platform_network
      - app_network
  weaviate:
    command:
      - --host
      - 0.0.0.0
      - --port
      - '8080'
      - --scheme
      - http
    image: semitechnologies/weaviate:1.25.10
    ports:
      - 8180:8080
      - 3001:8080
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: on-failure:0
    healthcheck:
      test: wget --no-verbose --tries=3 --spider http://localhost:8080/v1/.well-known/ready || exit 1
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    environment:
      OPENAI_APIKEY: ${OPENAI_API_KEY}
      COHERE_APIKEY: ${COHERE_API_KEY}
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      ENABLE_MODULES: 'e'
      CLUSTER_HOSTNAME: 'node1'
    networks:
      - platform_network
      - app_network

volumes:
  mysql_data:
    driver: local
  ollama:
    driver: local
  weaviate_data:
    driver: local

networks:
  platform_network:
    external: true
  app_network:
    external: true